server {
    listen  80;
    listen  [::]:80;

server_tokens off;
    if ($request_method !~ ^(GET|HEAD|POST|DELETE|PUT)$ )
    {
      return 405;
    }

    # config to don't allow the browser to render the page inside an frame or iframe
    # and avoid clickjacking http://en.wikipedia.org/wiki/Clickjacking
    # if you need to allow [i]frames, you can use SAMEORIGIN or even set an uri with ALLOW-FROM uri
    # https://developer.mozilla.org/en-US/docs/HTTP/X-Frame-Options

    add_header X-Frame-Options SAMEORIGIN always;

    # Additional headers recommended by Pen Testers

    #add_header Content-Security-Policy "default-src 'self' https://www.youtube.com/ https://api-bridge.azurewebsites.net/; frame-ancestors 'self'; img-src 'self' data:; font-src 'self' data:; style-src data: 'self' 'unsafe-inline'; script-src data: 'self' 'unsafe-inline'" always;

    #add_header Feature-Policy "geolocation 'none';midi 'none';sync-xhr 'none';microphone 'none';camera 'none';magnetometer 'none';gyroscope 'none';speaker 'none';fullscreen 'none';payment 'none';" always;

    #add_header Referrer-Policy "no-referrer-when-downgrade" always;

    #add_header Cache-Control "no-cache" always;

    #add_header Pragma "no-cache" always;

    #add_header Expires "-1" always;

    # when serving user-supplied content, include a X-Content-Type-Options: nosniff header along with the Content-Type: header,
    # to disable content-type sniffing on some browsers.
    # https://www.owasp.org/index.php/List_of_useful_HTTP_headers
    # currently suppoorted in IE > 8 http://blogs.msdn.com/b/ie/archive/2008/09/02/ie8-security-part-vi-beta2-update.aspx
    # http://msdn.microsoft.com/en-us/library/ie/gg622941(v=vs.85).aspx
    # 'soon' on Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=471020

    #add_header X-Content-Type-Options nosniff always;

    # This header enables the Cross-site scripting (XSS) filter built into most recent web browsers.
    # It's usually enabled by default anyway, so the role of this header is to re-enable the filter for 
    # this particular website if it was disabled by the user.
    # https://www.owasp.org/index.php/List_of_useful_HTTP_headers

    add_header X-XSS-Protection "1; mode=block" always;

    #ssl_certificate /etc/pki/tls/certs/star.myhelm.org.chain.crt;
    #ssl_certificate_key /etc/pki/tls/private/star.myhelm.org.key;


    #ssl_session_cache shared:SSL:50m;
    #ssl_session_timeout 1d;
    #ssl_session_tickets off;
    #ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    # Following 3 lines disabled for pen-testing mitigation
    # ssl_prefer_server_ciphers on;
    # ssl_protocols TLSv1.1 TLSv1.2;
    # ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';

    #ssl_ciphers ECDH+AESGCM:ECDH+CHACHA20:ECDH+AES256:ECDH+AES128:!aNULL:!SHA1;
    #ssl_prefer_server_ciphers Off;

    # temporarily added TLSv1.0 for LTHT testing

    #ssl_protocols TLSv1 TLSv1.1 TLSv1.2;




    #resolver 8.8.8.8 8.8.4.4;
    #ssl_stapling on;
    #ssl_stapling_verify on;
    #ssl_trusted_certificate /etc/nginx/ssl/star_forgott_com.crt;
    #add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload" always;

    proxy_hide_header X-Powered-By;

    location / {
        root    /usr/share/nginx/html;
        index   index.html index.htm;
    }

    location /api {
        proxy_pass http://host.docker.internal:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_cache_bypass $http_upgrade;

        add_header Cache-Control "no-cache" always;

        add_header Pragma "no-cache" always;

        add_header Expires "-1" always;
    }

    location /openid {

      proxy_pass http://host.docker.internal:8000;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_redirect off;
    }
}